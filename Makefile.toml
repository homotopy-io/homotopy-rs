[config]
default_to_workspace = false

[env]
GIT_DESCRIBE = { script = ["git describe --dirty --always --tags"] }

[env.development]
TARGET_SUBDIRECTORY = "debug"

[env.release]
TARGET_SUBDIRECTORY = "release"

[tasks.build-wasm]
script = '''
mkdir -p dist
cargo build --target wasm32-unknown-unknown --profile ${CARGO_MAKE_CARGO_PROFILE}
wasm-bindgen --out-dir dist --no-typescript --target web target/wasm32-unknown-unknown/${TARGET_SUBDIRECTORY}/homotopy_web.wasm
'''

[tasks.build-wasm-watch]
run_task = { name = ["build-wasm"] }
watch = { watch = ["homotopy-common/src", "homotopy-core/src", "homotopy-graphics/src", "homotopy-web/src"] }

[tasks.build-highs]
script = '''
mkdir -p dist
cp $(nix build .#highs --no-link --print-out-paths --extra-experimental-features flakes --extra-experimental-features nix-command)/highs.{js,wasm} dist/
'''

[tasks.dist-static]
script = '''
mkdir -p dist
echo "Cleaning old files"
find dist ! -name homotopy_web.js ! -name homotopy_web_bg.wasm -type f -exec rm -f {} +
cp -r homotopy-web/static/* dist/
ls dist
'''

[tasks.dist-static-watch]
run_task = { name = ["dist-static"] }
watch = { watch = ["static"] }

[tasks.dist]
run_task = { name = ["build-wasm", "dist-static"] }

[tasks.clean]
clear = true
script = '''
rm -rf dist
cargo clean
'''

[tasks.mkdir-dist]
script = '''
mkdir -p dist
'''

[tasks.devserver]
command = "devserver"
args = [
  "--path"
, "dist"
, "--header"
, "Cross-Origin-Opener-Policy=same-origin"
, "--header"
, "Cross-Origin-Embedder-Policy=require-corp"
]

# for testing Firebase components locally
[tasks.firebase-emulator]
command = "firebase"
args = [
  "emulators:start"
]

[tasks.run-server]
run_task = [
  { name = ["mkdir-dist", "devserver"] },
]

[tasks.serve]
run_task = { name = ["run-server", "build-wasm-watch", "build-highs", "dist-static-watch"], parallel = true }
