name: CI

on:
  push:
    branches-ignore:
      # Don't run on dependabot PRs
      # https://github.com/actions-rs/clippy-check/issues/2#issuecomment-807852653
      - 'dependabot/**'
  pull_request:

env:
  CARGO_HUSKY_DONT_INSTALL_HOOKS: true
  NIX_BUILD: nix build -L --show-trace
  NIX_BUILD_UNCACHED: nix run nixpkgs#nix-build-uncached -- -build-flags -L
  FLAKE: 'github:homotopy-io/homotopy-rs?rev=${{ github.sha }}'

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Install Nix
        uses: cachix/install-nix-action@v17
        with:
          extra_nix_config: |
            max-jobs = 4
      - name: Setup cachix
        uses: cachix/cachix-action@v10
        with:
          name: homotopy-io
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - name: Test
        run: |
          set -euo pipefail
          $NIX_BUILD_UNCACHED https://github.com/homotopy-io/homotopy-rs/archive/$GITHUB_SHA.tar.gz -A checks.x86_64-linux.homotopy-common-tests
          $NIX_BUILD_UNCACHED https://github.com/homotopy-io/homotopy-rs/archive/$GITHUB_SHA.tar.gz -A checks.x86_64-linux.homotopy-core-tests
          $NIX_BUILD_UNCACHED https://github.com/homotopy-io/homotopy-rs/archive/$GITHUB_SHA.tar.gz -A checks.x86_64-linux.homotopy-graphics-tests

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install Nix
        uses: cachix/install-nix-action@v17
        with:
          extra_nix_config: |
            max-jobs = 4
      - name: Setup cachix
        uses: cachix/cachix-action@v10
        with:
          name: homotopy-io
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - name: Run lint
        run: |
          nix run .#lint

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Install Nix
        uses: cachix/install-nix-action@v17
        with:
          extra_nix_config: |
            max-jobs = 4
      - name: Setup cachix
        uses: cachix/cachix-action@v10
        with:
          name: homotopy-io
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      # https://github.com/actions/upload-artifact/issues/92#issuecomment-1080347032
      - name: Build
        run: |
          $NIX_BUILD $FLAKE
          echo "UPLOAD_PATH=$(readlink -f result)" >> $GITHUB_ENV
      - name: Archive build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: web
          path: ${{ env.UPLOAD_PATH }}

  deploy:
    name: Deploy
    concurrency: deploy
    runs-on: ubuntu-latest
    needs: [build, test]
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: web
          path: homotopy-web/dist
      - name: Checkout historical benchmarking data
        uses: actions/checkout@v3
        with:
          ref: gh-pages
          path: olddist
      - name: Merge historical benchmarking data
        run: mv olddist/dev homotopy-web/dist/dev
      - name: Deploy
        uses: JamesIves/github-pages-deploy-action@v4.3.3
        with:
          branch: gh-pages
          folder: homotopy-web/dist

  benchmark:
    name: Benchmark
    runs-on: ubuntu-latest
    needs: [build, test]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install Nix
        uses: cachix/install-nix-action@v17
        with:
          extra_nix_config: |
            max-jobs = 4
      - name: Setup cachix
        uses: cachix/cachix-action@v10
        with:
          name: homotopy-io
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - name: Run cargo bench
        run: |
          nix run .#bench
      - name: Store benchmark result
        uses: NickHu/github-action-benchmark@v1
        with:
          name: Rust Benchmark
          tool: 'criterion'
          output-file-path: output.txt
          github-token: ${{ secrets.GITHUB_TOKEN }}
          auto-push: ${{ github.ref == 'refs/heads/master' }}
          comment-on-alert: true
          fail-on-alert: true
          alert-comment-cc-users: '@NickHu,@zrho'
